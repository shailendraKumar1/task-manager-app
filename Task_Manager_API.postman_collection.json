{
	"info": {
		"_postman_id": "task-manager-api-collection",
		"name": "Task Manager API",
		"description": "Complete API collection for Task Manager with priority support and advanced filtering",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the API service is running"
			}
		},
		{
			"name": "Create Task",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Implement user authentication\",\n  \"description\": \"Add JWT-based authentication to the API\",\n  \"status\": \"Pending\",\n  \"priority\": \"High\",\n  \"user_id\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Create a new task with priority support"
			}
		},
		{
			"name": "Create Task - Default Priority",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Review code changes\",\n  \"description\": \"Review the latest pull request\",\n  \"status\": \"Pending\",\n  \"user_id\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Create task without priority (defaults to Medium)"
			}
		},
		{
			"name": "Get Task by UUID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks/{{task_uuid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks",
						"{{task_uuid}}"
					]
				},
				"description": "Retrieve a specific task by its UUID"
			}
		},
		{
			"name": "Update Task",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Updated task title\",\n  \"status\": \"InProgress\",\n  \"priority\": \"Urgent\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks/{{task_uuid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks",
						"{{task_uuid}}"
					]
				},
				"description": "Update an existing task with new priority"
			}
		},
		{
			"name": "Delete Task",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks/{{task_uuid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks",
						"{{task_uuid}}"
					]
				},
				"description": "Delete a task by UUID"
			}
		},
		{
			"name": "List All Tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Get all tasks with default pagination"
			}
		},
		{
			"name": "List Tasks - Basic Pagination",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks?page=1&pageSize=5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "5"
						}
					]
				},
				"description": "Get tasks with custom pagination"
			}
		},
		{
			"name": "List Tasks - Filter by Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks?status=Pending",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "status",
							"value": "Pending"
						}
					]
				},
				"description": "Filter tasks by status"
			}
		},
		{
			"name": "List Tasks - Filter by Priority",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks?priority=High",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "priority",
							"value": "High"
						}
					]
				},
				"description": "Filter tasks by priority level"
			}
		},
		{
			"name": "List Tasks - Filter by User",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks?user_id=550e8400-e29b-41d4-a716-446655440000",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "user_id",
							"value": "550e8400-e29b-41d4-a716-446655440000"
						}
					]
				},
				"description": "Filter tasks by user UUID"
			}
		},
		{
			"name": "List Tasks - Advanced Filtering",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks?status=Pending&user_id=550e8400-e29b-41d4-a716-446655440000&priority=High&page=1&pageSize=10",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					],
					"query": [
						{
							"key": "status",
							"value": "Pending"
						},
						{
							"key": "user_id",
							"value": "550e8400-e29b-41d4-a716-446655440000"
						},
						{
							"key": "priority",
							"value": "High"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "10"
						}
					]
				},
				"description": "Combine multiple filters with pagination"
			}
		},
		{
			"name": "Error Test - Invalid Priority",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Test invalid priority\",\n  \"description\": \"This should fail validation\",\n  \"status\": \"Pending\",\n  \"priority\": \"InvalidPriority\",\n  \"user_id\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Test priority validation with invalid value"
			}
		},
		{
			"name": "Error Test - Invalid Status",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Test invalid status\",\n  \"description\": \"This should fail validation\",\n  \"status\": \"InvalidStatus\",\n  \"priority\": \"Medium\",\n  \"user_id\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Test status validation with invalid value"
			}
		},
		{
			"name": "Error Test - Missing Title",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"description\": \"Task without title\",\n  \"status\": \"Pending\",\n  \"priority\": \"Medium\",\n  \"user_id\": \"550e8400-e29b-41d4-a716-446655440000\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Test required field validation"
			}
		},
		{
			"name": "Error Test - Invalid User ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Test invalid user\",\n  \"description\": \"This should fail user validation\",\n  \"status\": \"Pending\",\n  \"priority\": \"Medium\",\n  \"user_id\": \"invalid-user-id\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Test user validation with invalid UUID"
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "task_uuid",
			"value": "",
			"type": "string",
			"description": "UUID of a task (set this after creating a task)"
		}
	]
}
